(set-logic LIA)
(synth-fun join ((x0 Int)) Int ((Ix Int) (Ic Int) (Ipred Bool))
 ((Ix Int (Ic x0 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix))) (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i0 Int)
(declare-var p Int)
(constraint (or (not (>= (+ 1 1) 2)) (= (ite (< p i0) 2 2) (join 1))))
(check-synth)
