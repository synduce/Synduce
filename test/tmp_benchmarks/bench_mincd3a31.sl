(set-logic LIA)
(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))
(synth-fun f0 ((x10 Int) (x11 Int)) Int ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((min Ix Ix))) (Ix Int (Ic x10 x11 (- Ix) (+ Ix Ix) (min Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i3048 Int)
(declare-var i3047 Int)
(declare-var i Int)
(constraint (or (not (= i3047 i3048)) (= (min i (min i3047 i3048)) (f0 i i3047))))
(check-synth)
