(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun join$1 ((x24 Int) (x25 Int) (x26 Int) (x27 Int) (x28 Int)) Int
 ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((max Ix Ix)))
  (Ix Int (Ic x24 x25 x26 x27 x28 (- Ix) (+ Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i2202 Int)
(declare-var i2201 Int)
(declare-var i2200 Int)
(declare-var i2199 Int)
(declare-var i3 Int)
(declare-var i2 Int)
(declare-var i1 Int)
(declare-var i0 Int)
(declare-var i Int)
(constraint
 (or (not (and (and (<= i2199 i2200) (<= i2201 i2202)) (= i i2199)))
  (= (max i3 (max i2200 i2202)) (join$1 i3 i i0 i1 i2))))
(check-synth)
