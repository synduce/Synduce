(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))
(synth-fun odot$1 ((x10 Int) (x11 Int)) Int ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((max Ix Ix)))
  (Ix Int (Ic x10 x11 (- Ix) (+ Ix Ix) (min Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i22 Int)
(declare-var i21 Int)
(declare-var i0 Int)
(declare-var i Int)
(constraint
 (or (not (and (>= i21 i22) (and (and (> i 0) (> i i0)) (= i i))))
  (= (max (max i22 (min i0 i21)) (min i (max i0 i21))) (odot$1 i i0))))
(check-synth)
