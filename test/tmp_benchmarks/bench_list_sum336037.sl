(set-logic LIA)
(synth-fun op ((x32 Int) (x33 Int)) Int ((Ix Int) (Ic Int) (Ipred Bool))
 ((Ix Int (Ic x32 x33 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix))) (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(synth-fun join ((x34 Int) (x35 Int)) Int ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((+ Ix Ix))) (Ix Int (Ic x34 x35 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i2 Int)
(declare-var i Int)
(declare-var i9 Int)
(constraint (= i9 (join 0 i9)))
(constraint (= (+ i i9) (join (op i 0) i9)))
(constraint (= (+ i2 (+ i i9)) (join (op i (op i2 0)) i9)))
(check-synth)
