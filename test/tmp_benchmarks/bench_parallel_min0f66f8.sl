(set-logic LIA)
(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))
(synth-fun s1 ((x5 Int)) Int ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((min Ix Ix))) (Ix Int (Ic x5 (- Ix) (+ Ix Ix) (min Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i1005 Int)
(declare-var i Int)
(constraint (or (not (> i1005 i)) (= (min i i1005) (s1 i))))
(check-synth)
