(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun join$1 ((x7 Int) (x8 Int) (x9 Int) (x10 Int) (x11 Int)) Int
 ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((max Ix Ix)))
  (Ix Int (Ic x7 x8 x9 x10 x11 (- Ix) (+ Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i8 Int)
(declare-var i7 Int)
(declare-var i6 Int)
(declare-var i5 Int)
(declare-var i3 Int)
(declare-var i2 Int)
(declare-var i1 Int)
(declare-var i0 Int)
(declare-var i Int)
(constraint (or (not (and (<= i5 i6) (<= i7 i8))) (= (max i3 (max i6 i8)) (join$1 i3 i i0 i1 i2))))
(check-synth)
