(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun join2 ((x17 Int) (x18 Int) (x19 Int)) Int ((Ix Int) (Ic Int) (Ipred Bool))
 ((Ix Int (Ic x17 x18 x19 (- Ix) (+ Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i6 Int)
(declare-var i4 Int)
(declare-var p3 Int)
(declare-var p Int)
(constraint (= (max p (max p3 i4)) (max p (join2 p3 i4 i6))))
(check-synth)
