(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))
(synth-fun xi_2$0 ((x65 Int) (x66 Int) (x67 Int) (x68 Int) (x69 Int)) Int
 ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((max Ix Ix)))
  (Ix Int (Ic x65 x66 x67 x68 x69 (- Ix) (+ Ix Ix) (min Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i12 Int)
(declare-var i10 Int)
(declare-var i1 Int)
(declare-var i8 Int)
(declare-var i6 Int)
(declare-var i3 Int)
(declare-var i4 Int)
(declare-var i2 Int)
(declare-var i Int)
(constraint (= (max i2 (max i4 i)) (xi_2$0 i i2 i4 i2 i4)))
(constraint
 (= (max i2 (max (max i6 (max i8 i3)) i))
  (xi_2$0 i i2 (max i3 (max i6 i8)) i2 (min i3 (min i6 i8)))))
(constraint
 (= (max (max i10 (max i12 i1)) (max i4 i))
  (xi_2$0 i (min i1 (min i10 i12)) i4 (max i1 (max i10 i12)) i4)))
(check-synth)
