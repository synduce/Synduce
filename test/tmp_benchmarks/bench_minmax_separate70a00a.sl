(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))
(synth-fun xi_2$1 ((x55 Int) (x56 Int) (x57 Int) (x58 Int) (x59 Int)) Int
 ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((min Ix Ix)))
  (Ix Int (Ic x55 x56 x57 x58 x59 (- Ix) (+ Ix Ix) (min Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i12 Int)
(declare-var i10 Int)
(declare-var i1 Int)
(declare-var i8 Int)
(declare-var i6 Int)
(declare-var i3 Int)
(declare-var i4 Int)
(declare-var i2 Int)
(declare-var i Int)
(constraint (= (min i2 (min i4 i)) (xi_2$1 i i2 i4 i2 i4)))
(constraint
 (= (min i2 (min (min i6 (min i8 i3)) i))
  (xi_2$1 i i2 (max i3 (max i6 i8)) i2 (min i3 (min i6 i8)))))
(constraint
 (= (min (min i10 (min i12 i1)) (min i4 i))
  (xi_2$1 i (min i1 (min i10 i12)) i4 (max i1 (max i10 i12)) i4)))
(check-synth)
