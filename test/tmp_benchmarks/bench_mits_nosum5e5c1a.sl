(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun join1 ((x6 Int) (x7 Int) (x8 Int)) Int ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((max Ix Ix))) (Ix Int (Ic x6 x7 x8 (- Ix) (+ Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var p2 Int)
(declare-var i2 Int)
(declare-var p Int)
(constraint (or (not (>= i2 0)) (= (max (+ i2 p) 0) (join1 p i2 0))))
(constraint (or (not (>= i2 0)) (= (max (+ (max (+ i2 p) 0) p2) 0) (join1 p i2 (max (+ 0 p2) 0)))))
(check-synth)
