(set-logic NIA)
(synth-fun join ((x9 Int) (x10 Int) (x11 Int) (x12 Int)) Int
 ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((* Ix Ix)))
  (Ix Int (Ic x9 x10 x11 x12 (- Ix) (+ Ix Ix) (* Ix Ix) (div Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i1 Int)
(declare-var i2 Int)
(declare-var p1 Int)
(declare-var p0 Int)
(constraint (= (* p0 (* p1 i2)) (join p0 p1 0 i2)))
(constraint (= (* i1 (* p0 (* p1 i2))) (join p0 p1 (* i1 0) i2)))
(check-synth)
