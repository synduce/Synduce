(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun join$1 ((x12 Int) (x13 Int) (x14 Int) (x15 Int) (x16 Int)) Int
 ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((max Ix Ix)))
  (Ix Int (Ic x12 x13 x14 x15 x16 (- Ix) (+ Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i8 Int)
(declare-var i7 Int)
(declare-var i6 Int)
(declare-var i5 Int)
(declare-var i3 Int)
(declare-var i2 Int)
(declare-var i1 Int)
(declare-var i0 Int)
(declare-var i Int)
(constraint (or (not (and (<= i5 i6) (<= i7 i8))) (= (max i3 (max i6 i8)) (join$1 i3 i i0 i1 i2))))
(check-synth)
