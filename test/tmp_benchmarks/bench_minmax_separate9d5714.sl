(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))
(synth-fun xi_2$0 ((x41 Int) (x42 Int) (x43 Int) (x44 Int) (x45 Int)) Int
 ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((max Ix Ix)))
  (Ix Int (Ic x41 x42 x43 x44 x45 (- Ix) (+ Ix Ix) (min Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i8 Int)
(declare-var i6 Int)
(declare-var i3 Int)
(declare-var i4 Int)
(declare-var i2 Int)
(declare-var i Int)
(constraint (= (max i2 (max i4 i)) (xi_2$0 i i2 i4 i2 i4)))
(constraint
 (= (max i2 (max (max i6 (max i8 i3)) i))
  (xi_2$0 i i2 (max i3 (max i6 i8)) i2 (min i3 (min i6 i8)))))
(check-synth)
