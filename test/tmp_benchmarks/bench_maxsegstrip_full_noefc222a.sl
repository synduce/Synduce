(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun inner1 ((x38 Int) (x39 Int)) Int ((Ix Int) (Ic Int))
 ((Ix Int (Ic x38 x39 (- Ix) (+ Ix Ix) (max Ix Ix))) (Ic Int ((Constant Int)))))
(synth-fun inner0 ((x40 Int)) Int ((Ix Int) (Ic Int))
 ((Ix Int (Ic x40 (- Ix) (+ Ix Ix) (max Ix Ix))) (Ic Int ((Constant Int)))))
(synth-fun s0$0 ((x41 Int)) Int ((IStart Int) (Ix Int) (Ic Int))
 ((IStart Int ((max Ix Ix))) (Ix Int (Ic x41 (- Ix) (+ Ix Ix) (max Ix Ix)))
  (Ic Int ((Constant Int)))))
(synth-fun s0$1 ((x42 Int)) Int ((IStart Int) (Ix Int) (Ic Int))
 ((IStart Int ((max Ix Ix))) (Ix Int (Ic x42 (- Ix) (+ Ix Ix) (max Ix Ix)))
  (Ic Int ((Constant Int)))))
(synth-fun s0$2 ((x43 Int)) Int ((IStart Int) (Ix Int) (Ic Int))
 ((IStart Int ((max Ix Ix))) (Ix Int (Ic x43 (- Ix) (+ Ix Ix) (max Ix Ix)))
  (Ic Int ((Constant Int)))))
(synth-fun s0$3 ((x44 Int)) Int ((IStart Int) (Ix Int) (Ic Int))
 ((IStart Int ((+ Ix Ix))) (Ix Int (Ic x44 (- Ix) (+ Ix Ix) (max Ix Ix)))
  (Ic Int ((Constant Int)))))
(declare-var i12 Int)
(declare-var i Int)
(declare-var i16 Int)
(declare-var i15 Int)
(declare-var i14 Int)
(declare-var i13 Int)
(declare-var i2 Int)
(declare-var i0 Int)
(constraint (= (max i0 0) (s0$0 (inner0 i0))))
(constraint (= (max i0 0) (s0$1 (inner0 i0))))
(constraint (= (max i0 0) (s0$2 (inner0 i0))))
(constraint (= i0 (s0$3 (inner0 i0))))
(constraint (= (max (+ i13 i2) 0) (max (+ i13 i2) 0)))
(constraint (= (max i14 (max (+ i13 i2) 0)) (max (max i14 (+ i13 i2)) 0)))
(constraint (= (max (+ i16 i2) i15) (max i15 (+ i16 i2))))
(constraint (= (+ i16 i2) (+ i16 i2)))
(constraint (= (max (+ i i12) 0) (s0$0 (inner1 i (inner0 i12)))))
(constraint (= (max (+ i i12) 0) (s0$1 (inner1 i (inner0 i12)))))
(constraint (= (max (+ i i12) 0) (s0$2 (inner1 i (inner0 i12)))))
(constraint (= (+ i i12) (s0$3 (inner1 i (inner0 i12)))))
(check-synth)
