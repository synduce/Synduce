(set-logic LIA)
(synth-fun f1 ((x0 Int)) Int ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((+ Ix Ix))) (Ix Int (Ic x0 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i4 Int)
(declare-var i3 Int)
(declare-var i0 Int)
(declare-var i Int)
(constraint (or (not (and (and (>= i3 0) (>= i4 0)) (< i0 2))) (= (+ (+ 1 i3) i4) (f1 i))))
(check-synth)
