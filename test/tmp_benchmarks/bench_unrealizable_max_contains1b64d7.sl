(set-logic LIA)
(synth-fun c0 ((x28 Int) (x29 Int)) Bool ((IStart Bool) (Ipred Bool) (Ix Int) (Ic Int))
 ((IStart Bool ((or Ipred Ipred)))
  (Ipred Bool ((not Ipred) (and Ipred Ipred) (or Ipred Ipred) (= Ix Ix) (> Ix Ix) (>= Ix Ix)))
  (Ix Int (Ic x28 x29 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix))) (Ic Int ((Constant Int)))))
(declare-var b3 Bool)
(declare-var b2 Bool)
(declare-var p Int)
(declare-var i Int)
(declare-var x Int)
(constraint
 (or (not (and (or (not (> x i)) (> x p)) (> x i))) (= (or (= x p) (or b2 b3)) (c0 x p))))
(check-synth)
