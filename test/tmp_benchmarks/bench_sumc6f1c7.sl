(set-logic LIA)
(synth-fun join ((x20 Int) (x21 Int)) Int ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((+ Ix Ix))) (Ix Int (Ic x20 x21 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(synth-fun j2 ((x22 Int) (x23 Int)) Int ((Ix Int) (Ic Int) (Ipred Bool))
 ((Ix Int (Ic x22 x23 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix))) (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i5 Int)
(declare-var i4 Int)
(declare-var p Int)
(constraint (= p (join p 0)))
(constraint (= (+ p i4) (join p (j2 i4 0))))
(constraint (= (+ p (+ i4 i5)) (join p (j2 i4 (j2 i5 0)))))
(check-synth)
