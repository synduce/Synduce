(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun inner1 ((x36 Int) (x37 Int)) Int ((Ix Int) (Ic Int) (Ipred Bool))
 ((Ix Int (Ic x36 x37 (- Ix) (+ Ix Ix) (max Ix Ix) (ite Ipred Ix Ix))) 
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i995 Int)
(declare-var i0 Int)
(constraint (or (not true) (= (max 0 (+ i0 i995)) (max 0 (inner1 i0 i995)))))
(constraint (or (not true) (= (>= (+ i0 i995) 0) (>= (inner1 i0 i995) 0))))
(check-synth)
