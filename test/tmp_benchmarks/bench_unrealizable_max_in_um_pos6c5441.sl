(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun join ((x9 Int) (x10 Int) (x11 Int) (x12 Int)) Int
 ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((max Ix Ix)))
  (Ix Int (Ic x9 x10 x11 x12 (- Ix) (+ Ix Ix) (max Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i4 Int)
(declare-var i5 Int)
(declare-var i0 Int)
(declare-var i Int)
(constraint (= (max i (max i0 i5)) (join i i0 0 i5)))
(constraint (= (max i4 (max i (max i0 i5))) (join i i0 (max i4 0) i5)))
(check-synth)
