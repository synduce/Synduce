(set-logic LIA)
(synth-fun f ((x9 Int) (x10 Int) (x11 Int)) Int ((IStart Int) (Ix Int) (Ic Int) (Ipred Bool))
 ((IStart Int ((ite Ipred Ix Ix))) (Ix Int (Ic x9 x10 x11 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix)))
  (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var i2 Int)
(declare-var i1 Int)
(declare-var i0 Int)
(declare-var i Int)
(constraint (or (not (and (= i0 0) true)) (= (ite (> i 0) i 0) (f i i0 0))))
(constraint
 (or (not (and (= i0 (+ 1 0)) (and (= i2 0) true)))
  (= (ite (> i 1) (+ i (ite (> i1 0) i1 0)) (ite (> i1 0) i1 0))
   (f i i0 (ite (> i1 0) (+ i1 0) 0)))))
(check-synth)
